// <auto-generated />
using System;
using DotnetProjectManagement.ProjectManagement.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DotnetProjectManagement.ProjectManagement.MigrationService.Migrations
{
    [DbContext(typeof(ProjectManagementDbContext))]
    partial class ProjectManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");

                    b.HasDiscriminator().HasValue("Activity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("Archived")
                        .HasColumnType("boolean");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectCreatedActivityMember", b =>
                {
                    b.Property<Guid>("ProjectCreatedActivityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("ProjectCreatedActivityId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectCreatedActivityMembers");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectMember", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectMembers");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectUpdatedActivityMember", b =>
                {
                    b.Property<Guid>("ProjectUpdatedActivityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("New")
                        .HasColumnType("boolean");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("ProjectUpdatedActivityId", "UserId", "New");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUpdatedActivityMembers");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity", b =>
                {
                    b.HasBaseType("DotnetProjectManagement.ProjectManagement.Data.Models.Activity");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasIndex("ProjectId");

                    b.HasDiscriminator().HasValue("ProjectActivity");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectArchivedActivity", b =>
                {
                    b.HasBaseType("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity");

                    b.HasDiscriminator().HasValue("ProjectArchivedActivity");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectCreatedActivity", b =>
                {
                    b.HasBaseType("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasDiscriminator().HasValue("ProjectCreatedActivity");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectRestoredActivity", b =>
                {
                    b.HasBaseType("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity");

                    b.HasDiscriminator().HasValue("ProjectRestoredActivity");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectUpdatedActivity", b =>
                {
                    b.HasBaseType("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity");

                    b.Property<string>("NewDisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("OldDisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasDiscriminator().HasValue("ProjectUpdatedActivity");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Activity", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Document", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.User", "CreatedByUser")
                        .WithMany("Documents")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectCreatedActivityMember", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectCreatedActivity", "ProjectCreatedActivity")
                        .WithMany("Members")
                        .HasForeignKey("ProjectCreatedActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.User", "User")
                        .WithMany("ProjectCreatedActivityMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectCreatedActivity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectMember", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.Project", "Project")
                        .WithMany("Members")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.User", "User")
                        .WithMany("ProjectMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectUpdatedActivityMember", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectUpdatedActivity", "ProjectUpdatedActivity")
                        .WithMany("Members")
                        .HasForeignKey("ProjectUpdatedActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.User", "User")
                        .WithMany("ProjectUpdatedActivityMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectUpdatedActivity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectActivity", b =>
                {
                    b.HasOne("DotnetProjectManagement.ProjectManagement.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.Project", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.User", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Documents");

                    b.Navigation("ProjectCreatedActivityMemberships");

                    b.Navigation("ProjectMemberships");

                    b.Navigation("ProjectUpdatedActivityMemberships");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectCreatedActivity", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("DotnetProjectManagement.ProjectManagement.Data.Models.ProjectUpdatedActivity", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
