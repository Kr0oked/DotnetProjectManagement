@page "/users"
@using DotnetProjectManagement.ProjectManagement.Web.Clients
@using DotnetProjectManagement.ProjectManagement.Web.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@attribute [Authorize]
@inject IStringLocalizer<Resources> Localizer
@inject PreloadService PreloadService
@inject UserClient UserClient

<PageTitle>@Localizer["Users"]</PageTitle>

<Breadcrumb Items="breadcrumbs"/>

<p>@Localizer["UsersDescription"]</p>

<Grid TItem="UserRepresentation"
      Class="table table-hover"
      DataProvider="UsersDataProvider"
      AllowPaging="true"
      Responsive="true"
      PaginationItemsTextFormat="@Localizer["GridPaginationItemsTextFormat"]">

    <GridColumn TItem="UserRepresentation" HeaderText="@Localizer["UserFirstName"]">@context.FirstName</GridColumn>
    <GridColumn TItem="UserRepresentation" HeaderText="@Localizer["UserLastName"]">@context.LastName</GridColumn>

</Grid>

@code {

    private List<BreadcrumbItem> breadcrumbs = [];

    protected override void OnInitialized()
    {
        breadcrumbs =
        [
            new BreadcrumbItem { Text = Localizer["Users"], Href = "/users", IsCurrentPage = true }
        ];
    }

    private async Task<GridDataProviderResult<UserRepresentation>> UsersDataProvider(
        GridDataProviderRequest<UserRepresentation> request)
    {
        try
        {
            PreloadService.Show();

            var page = await UserClient
                .ListUsersAsync(request.PageNumber - 1, request.PageSize, request.CancellationToken);

            return new GridDataProviderResult<UserRepresentation>
            {
                Data = page.Content,
                TotalCount = (int)page.TotalElements
            };
        }
        finally
        {
            PreloadService.Hide();
        }
    }

}
